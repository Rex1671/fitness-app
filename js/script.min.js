document.addEventListener("DOMContentLoaded",function(){const e=document.getElementById("trainingForm"),t=document.getElementById("generateBtn"),n=document.getElementById("loading"),o=document.getElementById("results"),i=document.getElementById("planContent");e.addEventListener("submit",async function(e){e.preventDefault(),t.disabled=!0,n.classList.remove("hidden"),o.classList.add("hidden");const r={name:document.getElementById("name").value,age:document.getElementById("age").value,gender:document.getElementById("gender").value,sport:document.getElementById("sport").value,fitnessLevel:document.querySelector('input[name="fitnessLevel"]:checked').value,goals:document.getElementById("goals").value,injury:document.getElementById("injury").value||"None",days:document.getElementById("days").value};try{const e=`You're a certified fitness trainer. Create a weekly training plan for:
- Name: ${r.name}
- Age: ${r.age}
- Gender: ${r.gender}
- Sport: ${r.sport}
- Fitness level: ${r.fitnessLevel}
- Goal: ${r.goals}
- Injury history: ${r.injury}
- Available days: ${r.days}

Return a detailed 7-day training schedule with:
- Daily workout plan (drills, exercises)
- Recovery tips
- Motivational message
            
Format the response in HTML with proper headings and sections.`,t=await callGeminiAPI(e);i.innerHTML=t,o.classList.remove("hidden"),initFollowUpChat()}catch(e){console.error("Error:",e),i.innerHTML=`<p class="error">Error generating training plan: ${e.message}</p>`,o.classList.remove("hidden")}finally{n.classList.add("hidden"),t.disabled=!1}});const r=document.createElement("div");r.id="progressTracker",r.innerHTML=`
        <h2>Daily Progress</h2>
        <div id="progressDays"></div>
        <div id="progressBarContainer">
            <div id="progressBar"></div>
            <span id="progressText">0% Complete</span>
        </div>
    `,document.querySelector(".container").appendChild(r);function a(){const e=["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"],t=document.getElementById("progressDays");e.forEach(e=>{const n=document.createElement("div");n.className="dayCheck",n.innerHTML=`
                <input type="checkbox" id="${e.toLowerCase()}" name="progress">
                <label for="${e.toLowerCase()}">${e}</label>
            `,t.appendChild(n);const o=localStorage.getItem(`progress-${e.toLowerCase()}`);"true"===o&&n.querySelector("input").checked,n.querySelector("input").addEventListener("change",function(){localStorage.setItem(`progress-${e.toLowerCase()}`,this.checked),c()})}),c()}function c(){const e=document.querySelectorAll('#progressDays input[type="checkbox"]'),t=Array.from(e).filter(e=>e.checked).length,n=e.length,o=Math.round(t/n*100);document.getElementById("progressBar").style.width=`${o}%`,document.getElementById("progressText").textContent=`${o}% Complete`}a();function l(){const e=document.createElement("div");e.id="chatContainer",e.innerHTML=`
            <h3>Have questions about your plan?</h3>
            <div id="chatMessages"></div>
            <div class="chat-input">
                <input type="text" id="chatInput" placeholder="Ask about your plan...">
                <button id="sendChatBtn">Send</button>
            </div>
        `,o.appendChild(e),document.getElementById("sendChatBtn").addEventListener("click",d),document.getElementById("chatInput").addEventListener("keypress",function(e){"Enter"===e.key&&d()})}async function d(){const e=document.getElementById("chatInput"),t=e.value.trim();if(!t)return;u("user",t),e.value="";try{const e=await callGeminiAPI(`Regarding my training plan: ${t}. Please provide specific advice.`);u("assistant",e)}catch(e){u("assistant",`Error: ${e.message}`)}}function u(e,t){const n=document.getElementById("chatMessages"),o=document.createElement("div");o.className=`chat-message ${e}`,o.innerHTML=t,n.appendChild(o),n.scrollTop=n.scrollHeight}async function callGeminiAPI(e){const t="AIzaSyDTMqspY_C4KUwAqozRE7STorg0-HZD2yU",n="https://generativelanguage.googleapis.com/v1/models/gemini-2.0-flash:generateContent",o=await fetch(`${n}?key=${t}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({contents:[{parts:[{text:e}]}]})}),i=await o.json();if(!o.ok){const e=i.error||{};throw new Error(e.message||`API request failed with status ${o.status}`)}if(!i.candidates||!i.candidates[0].content.parts[0].text)throw new Error("Invalid response format from Gemini API");return i.candidates[0].content.parts[0].text}});
